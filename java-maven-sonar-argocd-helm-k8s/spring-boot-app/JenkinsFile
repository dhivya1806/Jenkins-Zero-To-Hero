pipeline {
  agent any
  tools {
        jdk 'JDK_17' 
        maven 'Maven_3.8.7'
    }
  stages {
    stage('Checkout'){
      steps {
        git credentialsId: 'github_credentials', 
        url: 'https://github.com/dhivya1806/Jenkins-Zero-To-Hero.git',
        branch: 'main'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app'){
          sh 'mvn clean install'
        }
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.200.15.117:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app'){
            sh '''
            mvn sonar:sonar \
            -Dsonar.login=$SONAR_AUTH_TOKEN \
            -Dsonar.host.url=${SONAR_URL}
            '''
          }  
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "dhivya1806/javamavensonarapp:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app'){
              sh 'docker build -t ${DOCKER_IMAGE} .'
            }
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
  stage('Checkout K8S manifest SCM'){
            steps {
                git credentialsId: 'github_credentials', 
                url: 'https://github.com/dhivya1806/Manifests1_repo.git',
                branch: 'main'
            }
        }
    stage('Update K8S manifest & push to Repo'){
            steps {
                script{
                    withCredentials([usernamePassword(credentialsId: 'github_credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                        cat deploy.yaml
                        sed -i "s/\\(image:.*:\\)[0-9]\\+/\\1${BUILD_NUMBER}/" deploy.yaml
                        cat deploy.yaml
                        git add deploy.yaml
                        if ! git diff --cached --quiet; then
                        git commit -m "Updated the deploy yaml | Jenkins Pipeline"
                        else
                        echo "No changes to commit"
                        fi
                        git remote -v
                        git config user.name "Dhivya"
                        git config user.email "dhivyasherlypapa@gmail.com"
                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/dhivya1806/Manifests1_repo.git HEAD:main
                        '''                        
                    }
                }
            }
        }
    
  }
}
