pipeline {
    
    agent any 
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        
        stage('Checkout'){
           steps {
                git credentialsId: 'github_credentials', 
                url: 'https://github.com/dhivya1806/Jenkins-Zero-To-Hero.git',
                branch: 'main'
           }
        }

        stage('Build Docker'){
            steps{
                script{
                    sh '''
                    echo 'Buid Docker Image'
                    docker build -t dhivya1806/python-todo-app:${BUILD_NUMBER} -f python-jenkins-argocd-k8s/Dockerfile .
                    '''
                }
            }
        }

        stage('Push the artifacts'){
           steps{
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker_cred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                    echo 'Logging in to Docker Hub'
                    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                    echo 'Push to Repo'
                    docker push dhivya1806/python-todo-app:${BUILD_NUMBER}
                    '''
                    }
                }
           }
        }
        stage('Checkout K8S manifest SCM'){
            steps {
                git credentialsId: 'github_credentials', 
                url: 'https://github.com/dhivya1806/Manifests_repo.git',
                branch: 'main'
            }
        }
        
        stage('Update K8S manifest & push to Repo'){
            steps {
                script{
                    withCredentials([usernamePassword(credentialsId: 'github_credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                        cat deploy.yaml
                        sh 'sed -i "s/\\(image:.*:\\)[0-9]\\+/\\1${BUILD_NUMBER}/" deploy.yaml'
                        cat deploy.yaml
                        git add deploy.yaml
                        if ! git diff --cached --quiet; then
                        git commit -m "Updated the deploy yaml | Jenkins Pipeline"
                        else
                        echo "No changes to commit"
                        fi
                        git remote -v
                        git config user.name "Dhivya"
                        git config user.email "dhivyasherlypapa@gmail.com"
                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/dhivya1806/Manifests_repo.git HEAD:main
                        '''                        
                    }
                }
            }
        }
    }
}
